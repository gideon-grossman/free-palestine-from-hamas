{"ast":null,"code":"var _jsxFileName = \"/Users/gideongrossman/Documents/free-palestine-from-hamas/ui-free-palestine-from-hamas/src/components/LanguagePicker.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button } from '@mui/material';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagePicker = () => {\n  _s();\n  let LANGUAGES = /*#__PURE__*/function (LANGUAGES) {\n    LANGUAGES[\"ENGLISH\"] = \"En\";\n    LANGUAGES[\"HEBREW\"] = \"\\u05E2\\u05D1\";\n    return LANGUAGES;\n  }({});\n  const [language, setLanguage] = useState('En');\n  const changeLanguage = () => {\n    if (language === 'En') setLanguage('עב');else if (language === 'עב') setLanguage('En');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => changeLanguage(),\n      variant: \"outlined\",\n      children: language\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguagePicker, \"6WqLyJ74ubrsvjZmkIUAnsTCq60=\");\n_c = LanguagePicker;\nexport default LanguagePicker;\nvar _c;\n$RefreshReg$(_c, \"LanguagePicker\");","map":{"version":3,"names":["Box","Button","useState","jsxDEV","_jsxDEV","LanguagePicker","_s","LANGUAGES","language","setLanguage","changeLanguage","sx","display","width","justifyContent","children","onClick","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gideongrossman/Documents/free-palestine-from-hamas/ui-free-palestine-from-hamas/src/components/LanguagePicker.tsx"],"sourcesContent":["import { Box, Button } from '@mui/material';\nimport { useState } from 'react';\n\nconst LanguagePicker = () => {\n    enum LANGUAGES {\n        ENGLISH = 'En',\n        HEBREW = 'עב'\n    }\n    const [language, setLanguage] = useState<string>('En');\n\n    const changeLanguage = () => {\n        if (language === 'En') setLanguage('עב');\n        else if (language === 'עב') setLanguage('En');\n    };\n\n    return (\n        <Box sx={{ display: 'flex', width: '100%', justifyContent: 'space-between' }}>\n            <Button onClick={() => changeLanguage()} variant=\"outlined\">\n                {language}\n            </Button>\n        </Box>\n    );\n};\n\nexport default LanguagePicker;\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,QAAQ,eAAe;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IACpBC,SAAS,0BAATA,SAAS;IAATA,SAAS;IAATA,SAAS;IAAA,OAATA,SAAS;EAAA;EAId,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,IAAI,CAAC;EAEtD,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIF,QAAQ,KAAK,IAAI,EAAEC,WAAW,CAAC,IAAI,CAAC,CAAC,KACpC,IAAID,QAAQ,KAAK,IAAI,EAAEC,WAAW,CAAC,IAAI,CAAC;EACjD,CAAC;EAED,oBACIL,OAAA,CAACJ,GAAG;IAACW,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE,MAAM;MAAEC,cAAc,EAAE;IAAgB,CAAE;IAAAC,QAAA,eACzEX,OAAA,CAACH,MAAM;MAACe,OAAO,EAAEA,CAAA,KAAMN,cAAc,CAAC,CAAE;MAACO,OAAO,EAAC,UAAU;MAAAF,QAAA,EACtDP;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACf,EAAA,CAnBID,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}